{
  "name": "vscode-ltex",
  "displayName": "LTeX",
  "version": "4.7.5",
  "preview": true,
  "description": "LanguageTool grammar checking with LaTeX support",
  "icon": "img/LTeX-icon.png",
  "author": "Julian Valentin",
  "publisher": "valentjn",
  "license": "Apache-2.0",
  "repository": {
    "url": "https://github.com/valentjn/vscode-ltex"
  },
  "engines": {
    "vscode": "^1.37.0"
  },
  "galleryBanner": {
    "color": "#6565f6",
    "theme": "dark"
  },
  "keywords": [
    "spell",
    "grammar",
    "proofread",
    "checker",
    "latex",
    "multi-root ready"
  ],
  "categories": [
    "Linters",
    "Other"
  ],
  "activationEvents": [
    "onLanguage:markdown",
    "onLanguage:latex"
  ],
  "extensionKind": "workspace",
  "main": "./dist/extension",
  "contributes": {
    "configuration": {
      "title": "LTeX",
      "properties": {
        "ltex.enabled": {
          "type": "boolean",
          "scope": "window",
          "default": true,
          "markdownDescription": "Controls whether the extension is enabled. Allows to disable LanguageTool on specific workspaces.",
          "description": "Controls whether the extension is enabled. Allows to disable LanguageTool on specific workspaces."
        },
        "ltex.language": {
          "type": "string",
          "scope": "resource",
          "default": "en-US",
          "markdownDescription": "The language (e.g., `en-US`) LanguageTool should check against. For supported languages see the [list of languages at LanguageTool.org](https://languagetool.org/languages/). Requires the installation of a [language support extension](https://marketplace.visualstudio.com/search?term=ltex&target=VSCode). See the Marketplace description of the installed *language support extension* for possible values. Use a specific variant like `en-US` or `de-DE` instead of the generic language code like `en` or `de` to obtain spelling corrections (in addition to grammar corrections).",
          "description": "The language (e.g., en-US) LanguageTool should check against. For supported languages see the list of languages at https://languagetool.org/languages/. Requires the installation of a language support extension via https://marketplace.visualstudio.com/search?term=ltex&target=VSCode. See the Marketplace description of the installed language support extension for possible values. Use a specific variant like en-US or de-DE instead of the generic language code like en or de to obtain spelling corrections (in addition to grammar corrections).",
          "examples": [
            "en-US",
            "de-DE"
          ]
        },
        "ltex.diagnosticSeverity": {
          "type": "string",
          "scope": "resource",
          "default": "information",
          "enum": [
            "error",
            "warning",
            "information",
            "hint"
          ],
          "enumDescriptions": [
            "Error diagnostics are usually underlined with a red squiggly line and appear in editor, minimap, Problems tab, and Explorer.",
            "Warning diagnostics are usually underlined with a yellow squiggly line and appear in editor, minimap, Problems tab, and Explorer.",
            "Information diagnostics are usually underlined with a blue squiggly line and appear in editor, minimap, and Problems tab, but not in the Explorer.",
            "Hint diagnostics are not underlined (only subtly marked) and only appear in the editor, not in minimap, Problems tab, or Explorer."
          ],
          "markdownDescription": "Severity of the diagnostics corresponding to the grammar and spelling errors. Allows to control how and where the diagnostics appear in Visual Studio Code.",
          "description": "Severity of the diagnostics corresponding to the grammar and spelling errors. Allows to control how and where the diagnostics appear in Visual Studio Code. One of \"error\", \"warning\", \"information\", and \"hint\"."
        },
        "ltex.commands.ignore": {
          "type": "array",
          "scope": "resource",
          "default": [],
          "markdownDescription": "List of additional L<sup>A</sup>T<sub>E</sub>X commands to be ignored by the L<sup>A</sup>T<sub>E</sub>X parser, listed together with empty arguments. Don't forget to escape the initial backslash by replacing it with two backslashes.",
          "description": "List of additional LaTeX commands to be ignored by the LaTeX parser, listed together with empty arguments (e.g., \"\\ref{}\", \"\\documentclass[]{}\"). Don't forget to escape the initial backslash by replacing it with two backslashes.",
          "examples": [
            "\\ref{}",
            "\\documentclass[]{}"
          ]
        },
        "ltex.commands.dummy": {
          "type": "array",
          "scope": "resource",
          "default": [],
          "markdownDescription": "List of additional L<sup>A</sup>T<sub>E</sub>X commands to be replaced by dummy words (i.e., `Dummy0`, `Dummy1`, etc.), listed together with empty arguments. LT<sub>E</sub>X internally uses this mechanism for equations, citations, references, and similar constructs that are part of the sentence structure and for which LanguageTool would throw an error if simply omitted from the checked text. Don't forget to escape the initial backslash by replacing it with two backslashes.",
          "description": "List of additional LaTeX commands to be replaced by dummy words (i.e., Dummy0, Dummy1, etc.), listed together with empty arguments (e.g., \"\\cite{}\", \"\\cite[]{}\"). LTeX internally uses this mechanism for equations, citations, references, and similar constructs that are part of the sentence structure and for which LanguageTool would throw an error if simply omitted from the checked text. Don't forget to escape the initial backslash by replacing it with two backslashes.",
          "examples": [
            "\\cite{}",
            "\\cite[]{}"
          ]
        },
        "ltex.environments.ignore": {
          "type": "array",
          "scope": "resource",
          "default": [],
          "markdownDescription": "List of additional L<sup>A</sup>T<sub>E</sub>X environments to be ignored by the L<sup>A</sup>T<sub>E</sub>X parser.",
          "description": "List of additional LaTeX environments to be ignored by the LaTeX parser.",
          "examples": [
            "lstlisting",
            "verbatim"
          ]
        },
        "ltex.ignoreRuleInSentence": {
          "type": "array",
          "scope": "resource",
          "default": [],
          "items": {
            "type": "object",
            "propertyNames": {
              "type": "string",
              "enum": [
                "rule",
                "sentence"
              ]
            },
            "properties": {
              "rule": {
                "type": "string",
                "markdownDescription": "The identifier of the LanguageTool rule."
              },
              "sentence": {
                "type": "string",
                "markdownDescription": "The sentence after parsing as supplied to LanguageTool."
              }
            }
          },
          "markdownDescription": "Individual rule/sentence pairs to ignore, i.e., no diagnostics of the specified rule will be displayed for the specified sentence. Add sentences by using the `Ignore in this sentence` quick fix.",
          "description": "Individual rule/sentence pairs to ignore, i.e., no diagnostics of the specified rule will be displayed for the specified sentence. Add sentences by using the \"Ignore in this sentence\" quick fix."
        },
        "ltex.configurationTarget": {
          "type": "object",
          "scope": "resource",
          "default": {
            "addToDictionary": "global",
            "disableRule": "workspaceFolder",
            "ignoreRuleInSentence": "workspaceFolder"
          },
          "propertyNames": {
            "type": "string",
            "enum": [
              "addToDictionary",
              "disableRule",
              "ignoreRuleInSentence"
            ]
          },
          "properties": {
            "addToDictionary": {
              "type": "string",
              "enum": [
                "global",
                "workspace",
                "workspaceFolder"
              ],
              "enumDescriptions": [
                "When adding a word to the dictionary, always update the global configuration.",
                "When adding a word to the dictionary, update the workspace configuration if currently in a workspace, otherwise update the global configuration.",
                "When adding a word to the dictionary, update the workspace folder configuration if currently in a workspace folder, otherwise update the workspace configuration if currently in a workspace, otherwise update the global configuration."
              ]
            },
            "disableRule": {
              "type": "string",
              "enum": [
                "global",
                "workspace",
                "workspaceFolder"
              ],
              "enumDescriptions": [
                "When disabling a rule, always update the global configuration.",
                "When disabling a rule, update the workspace configuration if currently in a workspace, otherwise update the global configuration.",
                "When disabling a rule, update the workspace folder configuration if currently in a workspace folder, otherwise update the workspace configuration if currently in a workspace, otherwise update the global configuration."
              ]
            },
            "ignoreRuleInSentence": {
              "type": "string",
              "enum": [
                "global",
                "workspace",
                "workspaceFolder"
              ],
              "enumDescriptions": [
                "When ignoring a rule in a sentence, always update the global configuration.",
                "When ignoring a rule in a sentence, update the workspace configuration if currently in a workspace, otherwise update the global configuration.",
                "When ignoring a rule in a sentence, update the workspace folder configuration if currently in a workspace folder, otherwise update the workspace configuration if currently in a workspace, otherwise update the global configuration."
              ]
            }
          },
          "markdownDescription": "Controls which `settings.json` to update when using one of the quick fixes.",
          "description": "Controls which \"settings.json\" to update when using one of the quick fixes. \"global\" always updates the global configuration, while \"workspace\" updates the workspace configuration if currently in a workspace, otherwise the global configuration."
        },
        "ltex.additionalRules.motherTongue": {
          "type": ["string", null],
          "scope": "resource",
          "default": null,
          "markdownDescription": "Optional mother tongue of the user (e.g., `de-DE`). If set, additional rules will be checked to detect false friends. False friend detection improves if a language model is supplied (see `ltex.additionalRules.languageModel`).",
          "description": "Optional mother tongue of the user (e.g., de-DE). If set, additional rules will be checked to detect false friends. False friend detection improves if a language model is supplied (see ltex.additionalRules.languageModel).",
          "examples": [
            "en-US",
            "de-DE"
          ]
        },
        "ltex.additionalRules.languageModel": {
          "type": ["string", null],
          "scope": "resource",
          "default": null,
          "markdownDescription": "Optional path to a directory with rules of a language model with *n*-gram occurrence counts.",
          "description": "Optional path to a directory with rules of a language model with n-gram occurrence counts."
        },
        "ltex.additionalRules.neuralNetworkModel": {
          "type": ["string", null],
          "scope": "resource",
          "default": null,
          "markdownDescription": "Optional path to a directory with rules of a pretrained neural network model.",
          "description": "Optional path to a directory with rules of a pretrained neural network model."
        },
        "ltex.additionalRules.word2VecModel": {
          "type": ["string", null],
          "scope": "resource",
          "default": null,
          "markdownDescription": "Optional path to a directory with rules of a word2vec language model.",
          "description": "Optional path to a directory with rules of a word2vec language model."
        },
        "ltex.performance.initialJavaHeapSize": {
          "type": "integer",
          "scope": "window",
          "default": 64,
          "markdownDescription": "Initial size of the Java heap memory in megabytes (corresponds to Java's `-Xms` option, must be a positive integer). Decreasing this might decrease RAM usage of the Java process. Changes require reloading the Visual Studio Code window to take effect.",
          "description": "Initial size of the Java heap memory in megabytes (corresponds to Java's \"-Xms\" option). Decreasing this might decrease RAM usage of the Java process. Changes require reloading the Visual Studio Code window to take effect."
        },
        "ltex.performance.maximumJavaHeapSize": {
          "type": "integer",
          "scope": "window",
          "default": 512,
          "markdownDescription": "Maximum size of the Java heap memory in megabytes (corresponds to Java's `-Xmx` option, must be a positive integer). Decreasing this might decrease RAM usage of the Java process. If you set this too small, the Java process may exceed the heap size, in which case an `OutOfMemoryError` is thrown. Changes require reloading the Visual Studio Code window to take effect.",
          "description": "Maximum size of the Java heap memory in megabytes (corresponds to Java's \"-Xmx\" option). Decreasing this might decrease RAM usage of the Java process. If you set this too small, the Java process may exceed the heap size, in which case an \"OutOfMemoryError\" is thrown. Changes require reloading the Visual Studio Code window to take effect."
        },
        "ltex.performance.sentenceCacheSize": {
          "type": "integer",
          "scope": "resource",
          "default": 2000,
          "markdownDescription": "Size of the LanguageTool `ResultCache` in sentences (must be a positive integer). If only a small portion of the text changed (e.g., a single key press in the editor), LanguageTool uses the cache to avoid rechecking the complete text. LanguageTool internally splits the text into sentences, and sentences that have already been checked are skipped. Decreasing this might decrease RAM usage of the Java process. If you set this too small, checking time may increase significantly. Changes require reloading the Visual Studio Code window to take effect.",
          "description": "Size of the LanguageTool \"ResultCache\" in sentences. If only a small portion of the text changed (e.g., a single key press in the editor), LanguageTool uses the cache to avoid rechecking the complete text. LanguageTool internally splits the text into sentences, and sentences that have already been checked are skipped. Decreasing this might decrease RAM usage of the Java process. If you set this too small, checking time may increase significantly. Changes require reloading the Visual Studio Code window to take effect."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "tsc -p ./ && ./lib/languagetool-languageserver/gradlew --project-dir ./lib/languagetool-languageserver/ installDist && webpack --mode production",
    "webpack": "webpack --mode development",
    "webpack-dev": "webpack --mode development --watch",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./"
  },
  "devDependencies": {
    "@types/mocha": "^2.2.33",
    "@types/node": "^6.0.52",
    "@types/vscode": "^1.37.0",
    "ts-loader": "^6.0.4",
    "typescript": "^2.1.5",
    "webpack": "^4.39.3",
    "webpack-cli": "^3.3.8"
  },
  "dependencies": {
    "vscode-languageclient": "^5.2.1"
  }
}
